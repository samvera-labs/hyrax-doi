name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  bundle_lint_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: circle_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      fedora:
        image: ghcr.io/samvera/fcrepo4:4.7.5
        ports:
          - 8080:8080

      solr:
        image: solr:8
        ports:
          - 8983:8983

    env:
      RAILS_VERSION: 5.2.4.3
      DATABASE_NAME: circle_test
      DATABASE_HOST: localhost
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_TEST_NAME: circle_test
      BUNDLE_PATH: vendor/bundle
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      RAILS_ENV: test
      RACK_ENV: test
      FCREPO_TEST_PORT: 8080/fcrepo
      SPEC_OPTS: --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Ruby 2.7.1
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.1
          bundler-cache: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev

      - name: Setup Solr
        run: |
          # Wait for Solr to be ready
          timeout 30 bash -c 'until curl -f http://localhost:8983/solr/admin/cores; do sleep 1; done'
          # Create solr core
          curl "http://localhost:8983/solr/admin/cores?action=CREATE&name=hydra-test&instanceDir=/var/solr/data/hydra-test&config=solrconfig.xml&dataDir=data"
          # Upload solr config
          if [ -d "spec/internal_test_hyrax/solr/config" ]; then
            # Copy config files to solr
            docker exec $(docker ps -q --filter ancestor=solr:8) mkdir -p /var/solr/data/hydra-test/conf
            for file in spec/internal_test_hyrax/solr/config/*; do
              if [ -f "$file" ]; then
                docker cp "$file" $(docker ps -q --filter ancestor=solr:8):/var/solr/data/hydra-test/conf/
              fi
            done
            # Reload core
            curl "http://localhost:8983/solr/admin/cores?action=RELOAD&core=hydra-test"
          fi

      - name: Setup database
        run: |
          bundle exec rake app:db:create app:db:schema:load

      - name: Run Rubocop
        run: bundle exec rubocop

      - name: Run tests
        run: |
          bundle exec rspec
